package com.user.management.app;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.ArrayList;
import java.util.Arrays;

import org.junit.Test;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.user.management.controller.UserController;
import com.user.management.repository.UserRepository;
import com.user.management.service.UserService;

@WebMvcTest(UserController.class)
public class UserControllerTest {
	@Autowired
    MockMvc mockMvc;
    @Autowired
    ObjectMapper mapper;
    
    @MockBean
    UserRepository userrepository;
    @MockBean
    UserService userservice;
    
    UserRecord RECORD_1 = new UserRecord(11,"David",24,"SSE",160,60);
    UserRecord RECORD_2 = new UserRecord(2l, "Landup", 27, "JE",123,55);
    UserRecord RECORD_3 = new UserRecord(3l, "Jane", 31, "Lecturer",134,58);

    @Test
    public void getAllUsers_success() throws Exception {
        List<User> records = new ArrayList<>(Arrays.asList(RECORD_1, RECORD_2, RECORD_3));
        
        Mockito.when(UserRepository.findAll()).thenReturn(records);
        
        mockMvc.perform(MockMvcRequestBuilders
                .get("/user/1")
                .contentType(MediaType.APPLICATION_JSON))
                .andExpect(status().isOk())
                .andExpect(jsonPath("$", hasSize(5)))
                .andExpect(jsonPath("$[2].name", is("Jane")))
                .andExpect(result ->
        assertEquals(records, MockMvcRequestBuilders.get()));
}
    }


